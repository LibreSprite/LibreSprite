name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    # install dependencies
    - name: update
      run: sudo apt-get update
    - name: boost
      run: sudo apt-get install cmake g++ libcurl4-gnutls-dev libfreetype6-dev libgif-dev libgtest-dev libjpeg-dev libpixman-1-dev libpng-dev libsdl2-dev libsdl2-image-dev libtinyxml2-dev libwebp-dev libx11-dev libxcursor-dev ninja-build libnode-dev zlib1g-dev libarchive-dev libfuse2
    # build project
    - name: git
      run: git submodule update --init --recursive
    - name: mkdir
      run: mkdir build
    - name: cmake
      run: cd build && cmake -G Ninja -DCMAKE_BUILD_TYPE=Release .. && ninja libresprite
    - name: appimage
      run: |
        cd build/bin
        export ARCH="$(uname -m)"
        sh ../../package_linux.sh
        mv ./LibreSprite-anylinux-$ARCH.AppImage ../../
    - name: Archive production artifacts
      if: runner.arch == 'X64'
      uses: actions/upload-artifact@v4
      with:
        name: libresprite-development-linux-x86_64
        path: LibreSprite-anylinux-x86_64.AppImage
        if-no-files-found: error
